/*
Deployment script for zaposlime_local

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "zaposlime_local"
:setvar DefaultFilePrefix "zaposlime_local"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [zaposlime].[EmployeeReview]...';


GO
CREATE TABLE [zaposlime].[EmployeeReview] (
    [Id]         UNIQUEIDENTIFIER NOT NULL,
    [Rating]     INT              NOT NULL,
    [Comment]    NVARCHAR (MAX)   NULL,
    [EmployeeId] NVARCHAR (450)   NOT NULL,
    [CreatedBy]  UNIQUEIDENTIFIER NOT NULL,
    [CreatedAt]  DATETIME         NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [zaposlime].[EmployerReview]...';


GO
CREATE TABLE [zaposlime].[EmployerReview] (
    [Id]         UNIQUEIDENTIFIER NOT NULL,
    [Rating]     INT              NOT NULL,
    [Comment]    NVARCHAR (MAX)   NULL,
    [EmployerId] NVARCHAR (450)   NOT NULL,
    [CreatedBy]  UNIQUEIDENTIFIER NOT NULL,
    [CreatedAt]  DATETIME         NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [zaposlime].[FK_Review_Employee]...';


GO
ALTER TABLE [zaposlime].[EmployeeReview] WITH NOCHECK
    ADD CONSTRAINT [FK_Review_Employee] FOREIGN KEY ([EmployeeId]) REFERENCES [identity].[AspNetUsers] ([Id]);


GO
PRINT N'Creating Foreign Key [zaposlime].[FK_Review_Employer]...';


GO
ALTER TABLE [zaposlime].[EmployerReview] WITH NOCHECK
    ADD CONSTRAINT [FK_Review_Employer] FOREIGN KEY ([EmployerId]) REFERENCES [identity].[AspNetUsers] ([Id]);


GO
PRINT N'Altering View [zaposlime].[JobGridView]...';


GO
ALTER VIEW [zaposlime].[JobGridView]
	AS SELECT 
	j.Id,
	j.Title,
	j.Description,
	j.NumberOfWorkers,
	j.EmployerId,
	j.CreatedAt,
	u.FirstName + ' ' + u.LastName AS EmployerFullName,
	j.CityId,
	c.Name AS CityName
	FROM [zaposlime].[Job] j
	LEFT JOIN [identity].[AspNetUsers] u ON u.Id = j.EmployerId
	LEFT JOIN [zaposlime].[City] c ON c.Id = j.CityId
GO
PRINT N'Creating View [zaposlime].[EmployerReviewGridView]...';


GO
CREATE VIEW [zaposlime].[EmployerReviewGridView]
	AS
    WITH R AS
    (
        SELECT
            er.EmployerId,
            COUNT_BIG(*) AS TotalReviews,
            SUM(CASE
                    WHEN er.Comment IS NOT NULL AND LTRIM(RTRIM(er.Comment)) <> N'' THEN 1
                    ELSE 0
                END) AS CommentCount,
            AVG(CAST(er.Rating AS DECIMAL(10,4))) AS AvgRating
        FROM [zaposlime].[EmployerReview] er
        GROUP BY er.EmployerId
    )
    SELECT
        r.EmployerId,
        u.FirstName + N' ' + u.LastName AS EmployerFullName,
        r.TotalReviews,
        r.CommentCount,
        CAST(r.AvgRating AS DECIMAL(4,2)) AS AverageRating
    FROM R r
    INNER JOIN [identity].[AspNetUsers] u
        ON u.Id = r.EmployerId;
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [zaposlime].[EmployeeReview] WITH CHECK CHECK CONSTRAINT [FK_Review_Employee];

ALTER TABLE [zaposlime].[EmployerReview] WITH CHECK CHECK CONSTRAINT [FK_Review_Employer];


GO
PRINT N'Update complete.';


GO
