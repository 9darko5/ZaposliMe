/*
Deployment script for zaposlime

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "zaposlime"
:setvar DefaultFilePrefix "zaposlime"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
/*
The column [identity].[AspNetUsers].[FirstName] on table [identity].[AspNetUsers] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [identity].[AspNetUsers].[LastName] on table [identity].[AspNetUsers] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column LockoutEnd in table [identity].[AspNetUsers] is currently  DATETIMEOFFSET (7) NULL but is being changed to  DATETIME NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  DATETIME NULL.

The column NormalizedUserName on table [identity].[AspNetUsers] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column UserName on table [identity].[AspNetUsers] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [identity].[AspNetUsers])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Index [identity].[AspNetUsers].[UserNameIndex]...';


GO
DROP INDEX [UserNameIndex]
    ON [identity].[AspNetUsers];


GO
PRINT N'Dropping Index [identity].[AspNetRoleClaims].[IX_AspNetRoleClaims_RoleId]...';


GO
DROP INDEX [IX_AspNetRoleClaims_RoleId]
    ON [identity].[AspNetRoleClaims];


GO
PRINT N'Dropping Index [identity].[AspNetRoles].[RoleNameIndex]...';


GO
DROP INDEX [RoleNameIndex]
    ON [identity].[AspNetRoles];


GO
PRINT N'Dropping Index [identity].[AspNetUserClaims].[IX_AspNetUserClaims_UserId]...';


GO
DROP INDEX [IX_AspNetUserClaims_UserId]
    ON [identity].[AspNetUserClaims];


GO
PRINT N'Dropping Index [identity].[AspNetUserLogins].[IX_AspNetUserLogins_UserId]...';


GO
DROP INDEX [IX_AspNetUserLogins_UserId]
    ON [identity].[AspNetUserLogins];


GO
PRINT N'Dropping Index [identity].[AspNetUserRoles].[IX_AspNetUserRoles_RoleId]...';


GO
DROP INDEX [IX_AspNetUserRoles_RoleId]
    ON [identity].[AspNetUserRoles];


GO
PRINT N'Dropping Index [identity].[AspNetUsers].[EmailIndex]...';


GO
DROP INDEX [EmailIndex]
    ON [identity].[AspNetUsers];


GO
PRINT N'Dropping Foreign Key [identity].[FK_AspNetRoleClaims_AspNetRoles_RoleId]...';


GO
ALTER TABLE [identity].[AspNetRoleClaims] DROP CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId];


GO
PRINT N'Dropping Foreign Key [identity].[FK_AspNetUserRoles_AspNetRoles_RoleId]...';


GO
ALTER TABLE [identity].[AspNetUserRoles] DROP CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId];


GO
PRINT N'Dropping Foreign Key [identity].[FK_AspNetUserClaims_AspNetUsers_UserId]...';


GO
ALTER TABLE [identity].[AspNetUserClaims] DROP CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId];


GO
PRINT N'Dropping Foreign Key [identity].[FK_AspNetUserLogins_AspNetUsers_UserId]...';


GO
ALTER TABLE [identity].[AspNetUserLogins] DROP CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId];


GO
PRINT N'Dropping Foreign Key [identity].[FK_AspNetUserRoles_AspNetUsers_UserId]...';


GO
ALTER TABLE [identity].[AspNetUserRoles] DROP CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId];


GO
PRINT N'Dropping Foreign Key [identity].[FK_AspNetUserTokens_AspNetUsers_UserId]...';


GO
ALTER TABLE [identity].[AspNetUserTokens] DROP CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId];


GO
PRINT N'Creating Schema [zaposlime]...';


GO
CREATE SCHEMA [zaposlime]
    AUTHORIZATION [dbo];


GO
PRINT N'Starting rebuilding table [identity].[AspNetUsers]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [identity].[tmp_ms_xx_AspNetUsers] (
    [Id]                   NVARCHAR (450) NOT NULL,
    [Initials]             NVARCHAR (5)   NULL,
    [UserName]             NVARCHAR (256) NOT NULL,
    [NormalizedUserName]   NVARCHAR (256) NOT NULL,
    [Email]                NVARCHAR (256) NULL,
    [NormalizedEmail]      NVARCHAR (256) NULL,
    [EmailConfirmed]       BIT            NOT NULL,
    [PasswordHash]         NVARCHAR (MAX) NULL,
    [SecurityStamp]        NVARCHAR (MAX) NULL,
    [ConcurrencyStamp]     NVARCHAR (MAX) NULL,
    [PhoneNumber]          NVARCHAR (MAX) NULL,
    [PhoneNumberConfirmed] BIT            NOT NULL,
    [TwoFactorEnabled]     BIT            NOT NULL,
    [LockoutEnd]           DATETIME       NULL,
    [LockoutEnabled]       BIT            NOT NULL,
    [AccessFailedCount]    INT            NOT NULL,
    [FirstName]            NVARCHAR (50)  NOT NULL,
    [LastName]             NVARCHAR (50)  NOT NULL,
    [Age]                  BIGINT         NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_user.AspNetUsers1] PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [identity].[AspNetUsers])
    BEGIN
        INSERT INTO [identity].[tmp_ms_xx_AspNetUsers] ([Id], [Initials], [UserName], [NormalizedUserName], [Email], [NormalizedEmail], [EmailConfirmed], [PasswordHash], [SecurityStamp], [ConcurrencyStamp], [PhoneNumber], [PhoneNumberConfirmed], [TwoFactorEnabled], [LockoutEnd], [LockoutEnabled], [AccessFailedCount])
        SELECT   [Id],
                 [Initials],
                 [UserName],
                 [NormalizedUserName],
                 [Email],
                 [NormalizedEmail],
                 [EmailConfirmed],
                 [PasswordHash],
                 [SecurityStamp],
                 [ConcurrencyStamp],
                 [PhoneNumber],
                 [PhoneNumberConfirmed],
                 [TwoFactorEnabled],
                 [LockoutEnd],
                 [LockoutEnabled],
                 [AccessFailedCount]
        FROM     [identity].[AspNetUsers]
        ORDER BY [Id] ASC;
    END

DROP TABLE [identity].[AspNetUsers];

EXECUTE sp_rename N'[identity].[tmp_ms_xx_AspNetUsers]', N'AspNetUsers';

EXECUTE sp_rename N'[identity].[tmp_ms_xx_constraint_PK_user.AspNetUsers1]', N'PK_user.AspNetUsers', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [identity].[AspNetRoles]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [identity].[tmp_ms_xx_AspNetRoles] (
    [Id]               NVARCHAR (450) NOT NULL,
    [Name]             NVARCHAR (256) NULL,
    [NormalizedName]   NVARCHAR (256) NULL,
    [ConcurrencyStamp] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [identity].[AspNetRoles])
    BEGIN
        INSERT INTO [identity].[tmp_ms_xx_AspNetRoles] ([Id], [Name], [NormalizedName], [ConcurrencyStamp])
        SELECT   [Id],
                 [Name],
                 [NormalizedName],
                 [ConcurrencyStamp]
        FROM     [identity].[AspNetRoles]
        ORDER BY [Id] ASC;
    END

DROP TABLE [identity].[AspNetRoles];

EXECUTE sp_rename N'[identity].[tmp_ms_xx_AspNetRoles]', N'AspNetRoles';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [identity].[AspNetUserClaims]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [identity].[tmp_ms_xx_AspNetUserClaims] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [UserId]     NVARCHAR (450) NOT NULL,
    [ClaimType]  NVARCHAR (MAX) NULL,
    [ClaimValue] NVARCHAR (MAX) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_user.AspNetUserClaims1] PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [identity].[AspNetUserClaims])
    BEGIN
        SET IDENTITY_INSERT [identity].[tmp_ms_xx_AspNetUserClaims] ON;
        INSERT INTO [identity].[tmp_ms_xx_AspNetUserClaims] ([Id], [UserId], [ClaimType], [ClaimValue])
        SELECT   [Id],
                 [UserId],
                 [ClaimType],
                 [ClaimValue]
        FROM     [identity].[AspNetUserClaims]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [identity].[tmp_ms_xx_AspNetUserClaims] OFF;
    END

DROP TABLE [identity].[AspNetUserClaims];

EXECUTE sp_rename N'[identity].[tmp_ms_xx_AspNetUserClaims]', N'AspNetUserClaims';

EXECUTE sp_rename N'[identity].[tmp_ms_xx_constraint_PK_user.AspNetUserClaims1]', N'PK_user.AspNetUserClaims', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [identity].[AspNetUserLogins]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [identity].[tmp_ms_xx_AspNetUserLogins] (
    [LoginProvider]       NVARCHAR (450) NOT NULL,
    [ProviderKey]         NVARCHAR (450) NOT NULL,
    [ProviderDisplayName] NVARCHAR (MAX) NULL,
    [UserId]              NVARCHAR (450) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_user.AspNetUserLogins1] PRIMARY KEY CLUSTERED ([LoginProvider] ASC, [ProviderKey] ASC, [UserId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [identity].[AspNetUserLogins])
    BEGIN
        INSERT INTO [identity].[tmp_ms_xx_AspNetUserLogins] ([LoginProvider], [ProviderKey], [UserId], [ProviderDisplayName])
        SELECT   [LoginProvider],
                 [ProviderKey],
                 [UserId],
                 [ProviderDisplayName]
        FROM     [identity].[AspNetUserLogins]
        ORDER BY [LoginProvider] ASC, [ProviderKey] ASC, [UserId] ASC;
    END

DROP TABLE [identity].[AspNetUserLogins];

EXECUTE sp_rename N'[identity].[tmp_ms_xx_AspNetUserLogins]', N'AspNetUserLogins';

EXECUTE sp_rename N'[identity].[tmp_ms_xx_constraint_PK_user.AspNetUserLogins1]', N'PK_user.AspNetUserLogins', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [identity].[AspNetUserRoles]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [identity].[tmp_ms_xx_AspNetUserRoles] (
    [UserId] NVARCHAR (450) NOT NULL,
    [RoleId] NVARCHAR (450) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_user.AspNetUserRoles1] PRIMARY KEY CLUSTERED ([UserId] ASC, [RoleId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [identity].[AspNetUserRoles])
    BEGIN
        INSERT INTO [identity].[tmp_ms_xx_AspNetUserRoles] ([UserId], [RoleId])
        SELECT   [UserId],
                 [RoleId]
        FROM     [identity].[AspNetUserRoles]
        ORDER BY [UserId] ASC, [RoleId] ASC;
    END

DROP TABLE [identity].[AspNetUserRoles];

EXECUTE sp_rename N'[identity].[tmp_ms_xx_AspNetUserRoles]', N'AspNetUserRoles';

EXECUTE sp_rename N'[identity].[tmp_ms_xx_constraint_PK_user.AspNetUserRoles1]', N'PK_user.AspNetUserRoles', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [identity].[FK_AspNetRoleClaims_AspNetRoles_RoleId]...';


GO
ALTER TABLE [identity].[AspNetRoleClaims] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [identity].[AspNetRoles] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [identity].[FK_user.AspNetUserClaims_user.AspNetUsers_UserId]...';


GO
ALTER TABLE [identity].[AspNetUserClaims] WITH NOCHECK
    ADD CONSTRAINT [FK_user.AspNetUserClaims_user.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [identity].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [identity].[FK_user.AspNetUserLogins_user.AspNetUsers_UserId]...';


GO
ALTER TABLE [identity].[AspNetUserLogins] WITH NOCHECK
    ADD CONSTRAINT [FK_user.AspNetUserLogins_user.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [identity].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [identity].[FK_user.AspNetUserRoles_user.AspNetRoles_RoleId]...';


GO
ALTER TABLE [identity].[AspNetUserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_user.AspNetUserRoles_user.AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [identity].[AspNetRoles] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [identity].[FK_user.AspNetUserRoles_user.AspNetUsers_UserId]...';


GO
ALTER TABLE [identity].[AspNetUserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_user.AspNetUserRoles_user.AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [identity].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating Foreign Key [identity].[FK_AspNetUserTokens_AspNetUsers_UserId]...';


GO
ALTER TABLE [identity].[AspNetUserTokens] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [identity].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating View [identity].[UserGridView]...';


GO
CREATE VIEW [identity].[UserGridView]
	AS SELECT
	u.Id,
	u.FirstName,
	u.LastName,
	u.Email,
	u.PhoneNumber,
	u.Age
	FROM [identity].[AspNetUsers] u
GO
