@page "/employerreviews"
@using System.Net.Http.Json
@using ZaposliMe.Application.DTOs.User
@inject HttpClient Http
@using Microsoft.Extensions.Localization
@inject NavigationManager Nav
@inject IStringLocalizer<ZaposliMe.Frontend.Resources.Resources> L

<PageTitle>@L["EmployerReviews"]</PageTitle>

<h3 class="mb-3">@L["EmployerReviews"]</h3>

@if (isLoading)
{
    <div class="d-flex align-items-center gap-2">
        <div class="spinner-border" role="status" aria-hidden="true"></div>
        <span>@L["Loading"]</span>
    </div>
}
else if (!string.IsNullOrWhiteSpace(error))
{
    <div class="alert alert-danger" role="alert">
        @error
    </div>
}
else if (items is null || items.Count == 0)
{
    <div class="alert alert-info" role="alert">
        @L["NoReviewsFound"]
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-light">
                <tr>
@*                     <th>Employer ID</th>*@                    
                        <th>@L["FullName"]</th>
                    <th class="text-end">@L["TotalReviews"]</th>
                    <th class="text-end">@L["CommentCount"]</th>
                    <th class="text-end">@L["AverageRating"]</th>
                    <th style="width:220px">@L["Actions"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var r in items)
                {
                    <tr>
@*                         <td class="text-monospace">@r.EmployerId</td>
 *@                        <td>@r.EmployerFullName</td>
                        <td class="text-end">@r.TotalReviews</td>
                        <td class="text-end">@r.CommentCount</td>
                        <td class="text-end">@r.AverageRating.ToString("0.0")</td>
                        <td class="d-flex gap-2">
                            <button class="btn btn-sm btn-primary" @onclick="() => GoToDetails(r.EmployerId)">
                                @L["Details"]
                            </button>
                            <button class="btn btn-sm btn-secondary" @onclick="() => reviewModal.Open(r.EmployerId, r.EmployerFullName)">
                                @L["LeaveReview"]
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<LeaveEmployerReviewModal @ref="reviewModal"
                     PostUrl="api/user/leaveEmployerReview"
                     OnSubmitted="RefreshGrid" />

@code {
    private List<EmployerReviewGridReviewDto>? items;
    private bool isLoading = true;
    private string? error;

    private LeaveEmployerReviewModal? reviewModal;

    protected override async Task OnInitializedAsync()
    {
        await RefreshGrid();
    }

    private async Task RefreshGrid()
    {
        try
        {
            isLoading = true;
            error = null;

            items = await Http.GetFromJsonAsync<List<EmployerReviewGridReviewDto>>(
                "https://localhost:7097/api/user/allEmployerReviews");
        }
        catch (Exception ex)
        {
            error = $"Failed to load reviews: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void GoToDetails(string employerId)
    {
        Nav.NavigateTo($"/employerreviewsdetails/{Uri.EscapeDataString(employerId)}");
    }
}
