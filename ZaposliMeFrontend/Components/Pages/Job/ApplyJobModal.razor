@using ZaposliMe.Application.DTOs.Job
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<ZaposliMe.Frontend.Resources.Resources> L

@if (Show && Job != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@L["ApplyFor"] "@Job.Title"</h5>
                    <button type="button" class="btn-close" @onclick="OnClose"></button>
                </div>

                <div class="modal-body">
                    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @ErrorMessage
                        </div>
                    }
                    else if (ShowError)
                    {
                        <div class="alert alert-danger" role="alert">
                            @L["ApplyingIsNotPossibleAtTheMoment"]
                        </div>
                    }
                    else if (Job.NumberOfWorkers < 1)
                    {
                        <div class="alert alert-danger mb-0">
                            @L["ThisJobIsAlreadyFull"]
                        </div>
                    }
                    else
                    {
                        <p>@L["DoYouWantToApplyToThisJob"]</p>
                    }
                </div>

                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="OnClose">@L["Cancel"]</button>
                    <button class="btn btn-primary"
                            disabled="@(Job.NumberOfWorkers < 1)"
                            @onclick="() => OnConfirm.InvokeAsync(Job)">
                        @L["YesApply"]
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public JobDto? Job { get; set; }
    [Parameter] public bool Show { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback<JobDto> OnConfirm { get; set; }

    [Parameter] public bool ShowError { get; set; }

    [Parameter] public string? ErrorMessage { get; set; }
}
