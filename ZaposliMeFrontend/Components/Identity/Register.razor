@page "/register"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Authorization
@using ZaposliMe.Frontend.Identity
@using ZaposliMe.Frontend.Identity.Models
@inject IAccountManagement Acct

<PageTitle>Register</PageTitle>

<h1>Register</h1>

<AuthorizeView>
    <Authorized>
        <div class="alert alert-success">You're already logged in as @context.User.Identity?.Name.</div>
    </Authorized>
    <NotAuthorized>
        @if (formResult.Succeeded)
        {
            <div class="alert alert-success">
                You successfully registered. Now you can <a href="login">login</a>.
            </div>
        }
        else
        {
            @foreach (var error in formResult.ErrorList)
            {
                <div class="alert alert-danger">@error</div>
            }
            <div class="row">
                <div class="col">
                    <section>
                        <EditForm Model="Input" method="post" OnValidSubmit="RegisterUserAsync"
                                  FormName="register" Context="editform_context">
                            <DataAnnotationsValidator />
                            <h2>Register as a new user.</h2>
                            <hr />
                            <div class="form-floating mb-3">
                                <InputText @bind-Value="Input.FirstName"
                                           id="Input.FirstName"
                                           class="form-control"
                                           aria-required="true"/>
                                <label for="Input.FirstName" class="form-label">
                                    First name
                                </label>
                                <ValidationMessage For="() => Input.FirstName"
                                                   class="text-danger" />
                            </div>
                            <div class="form-floating mb-3">
                                <InputText @bind-Value="Input.LastName"
                                           id="Input.LastName"
                                           class="form-control"
                                           aria-required="true"/>
                                <label for="Input.LastName" class="form-label">
                                    Last name
                                </label>
                                <ValidationMessage For="() => Input.LastName"
                                                   class="text-danger" />
                            </div>
                            <div class="form-floating mb-3">
                                <InputText @bind-Value="Input.Email"
                                           id="Input.Email"
                                           class="form-control"
                                           autocomplete="username"
                                           aria-required="true"
                                           placeholder="name@example.com" />
                                <label for="Input.Email" class="form-label">
                                    Email
                                </label>
                                <ValidationMessage For="() => Input.Email"
                                                   class="text-danger" />
                            </div>
                            <div class="form-floating mb-3">
                                <InputText type="password"
                                           @bind-Value="Input.Password"
                                           id="Input.Password"
                                           class="form-control"
                                           autocomplete="new-password"
                                           aria-required="true"
                                           placeholder="password" />
                                <label for="Input.Password" class="form-label">
                                    Password
                                </label>
                                <ValidationMessage For="() => Input.Password"
                                                   class="text-danger" />
                            </div>
                            <div class="form-floating mb-3">
                                <InputText type="password"
                                           @bind-Value="Input.ConfirmPassword"
                                           id="Input.ConfirmPassword"
                                           class="form-control"
                                           autocomplete="new-password"
                                           aria-required="true"
                                           placeholder="confirm password" />
                                <label for="Input.ConfirmPassword" class="form-label">
                                    Confirm Password
                                </label>
                                <ValidationMessage For="() => Input.ConfirmPassword"
                                                   class="text-danger" />
                            </div>
                            <div class="form-floating mb-3">
                                <InputNumber
                                    @bind-Value="Input.Age"
                                           id="Input.Age"
                                           class="form-control"
                                           aria-required="true"/>
                                <label for="Input.Age" class="form-label">
                                    Age
                                </label>
                                <ValidationMessage For="() => Input.Age"
                                                   class="text-danger" />
                            </div>
                            <div class="form-floating mb-3">
                                <InputText @bind-Value="Input.PhoneNumber"
                                           id="Input.PhoneNumber"
                                           class="form-control"
                                           aria-required="true" />
                                <label for="Input.PhoneNumber" class="form-label">
                                    Phone number
                                </label>
                                <ValidationMessage For="() => Input.PhoneNumber"
                                                   class="text-danger" />
                            </div>
                            <div>
                                <button type="submit" class="w-100 btn btn-lg btn-primary">
                                    Register
                                </button>
                            </div>
                        </EditForm>
                    </section>
                </div>
            </div>
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    private FormResult formResult = new();

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    public async Task RegisterUserAsync()
    {
        formResult = await Acct.RegisterAsync(Input.FirstName, Input.LastName, Input.Email, Input.Password, Input.Age, Input.PhoneNumber);
    }

    private sealed class InputModel
    {
        [Required]
        [Display(Name = "FirstName")]
        public string FirstName { get; set; } = string.Empty;

        [Required]
        [Display(Name = "LastName")]
        public string LastName { get; set; } = string.Empty;

        [Required]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } = string.Empty;

        [Required]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } = string.Empty;

        [Required]
        [DataType(DataType.Password)]
        [Compare("Password")]
        [Display(Name = "Confirm Password")]
        public string ConfirmPassword { get; set; } = string.Empty;

        [Display(Name = "Age")]
        public long Age { get; set; }

        [DataType(DataType.PhoneNumber)]
        [Display(Name = "PhoneNumber")]
        public string PhoneNumber { get; set; } = string.Empty;
    }
}
